30 November 2023
21:41

git contains three area 

1 - Working area (location prior to  git add when files are created)
2 - Index/staging area (git add .sh)
3 - Local Repository : (when commited it bring it back to local repostiroy
)
4- git push (picks all the commits from local repos and pushes to remote repps)
 eg : git push origin (master/main )

 origin = remote repos and master = represents the branch to which we want to push all our changes

 ******************

Git Pull ---New update

When changes made to master by other user to get all thos in our local 

 Git Pull = git fetch + git merge 
https://github.com/mkvm205/git-cmds.git

git remote add murali https://github.com/mkvm205/git-cmds.git

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git remote -v 
murali  https://github.com/mkvm205/git-cmds.git (fetch)
murali  https://github.com/mkvm205/git-cmds.git (push)
origin  https://github.com/mkvm205/git-cmds.git (fetch)
origin  https://github.com/mkvm205/git-cmds.git (push)

 git fetch // provides the newly created branches to the local 
 $ git fetch 
From https://github.com/mkvm205/git-cmds
 * [new branch]      feature    -> origin/feature

 created new local branch task1 // updated the files there 
then committ -m in new task branch and then switch to master and then swithc to master branch  
do git merge task // execute from master branch 

**********************

TO delete a branch in git 

git branch -d <branch name> 
git branch -D <branch name > // will force a delete brnach even if it cotain uncommited files

**********************
pushing localy created new branch to remote

git contains three area 

1 - Working area (location prior to  git add when files are created)
2 - Index/staging area (git add .sh)
3 - Local Repository : (when commited it bring it back to local repostiroy
)
4- git push (picks all the commits from local repos and pushes to remote repps)
 eg : git push origin (master/main )

 origin = remote repos and master = represents the branch to which we want to push all our changes

 ******************

Git Pull ---New update

When changes made to master by other user to get all thos in our local 

 Git Pull = git fetch + git merge 
https://github.com/mkvm205/git-cmds.git

git remote add murali https://github.com/mkvm205/git-cmds.git

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git remote -v 
murali  https://github.com/mkvm205/git-cmds.git (fetch)
murali  https://github.com/mkvm205/git-cmds.git (push)
origin  https://github.com/mkvm205/git-cmds.git (fetch)
origin  https://github.com/mkvm205/git-cmds.git (push)

 git fetch // provides the newly created branches to the local 
 $ git fetch 
From https://github.com/mkvm205/git-cmds
 * [new branch]      feature    -> origin/feature

*********************
not seeing the change 
******************

***************************
TO resolve the confilct by opening and checking and updating the required
if there are multaiple liens of the code we have to use diffmerge tool 
**************
TO remove the commit locally and remotely 
git checkout 
git reset 
git revert

Discard the changes firs in the working area 

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        a
        b

nothing added to commit but untracked files present (use "git add" to track)

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$

Git reset has 3 option default is 

1. mixed ( Removes the recent commit done part of that commit  changed files are keept them in part of working area 
	2. Soft ( Removes the recent commit and keeps the files changed as part of that commit in staging area) 
	3. Hard ( Removes the recent commit and removes all the files changed donâ€™t keep in working or staging area)

kvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git log --oneline
40e80e0 (HEAD -> main) git reset command and Git reset Hard testing
4a67095 git reset command and git log --oneline
17e9e4f (origin/main) git rever the commit commnads
ffc9a3a git conflict to use git merge tool
590a696  check the new update in the main
5dd93e1  ++ pushing localy created main  branch to remote
6881b11 (origin/task1, task1)  pushing localy created task1 branch to remote
4af9737 Updated Git delete command
c7374c2 merge local task1 branch to local master branch the changes made
a13f8ab Git updated status
b8e2c47  update on git fetch command
867cd2e Update Git.txt
9569305 (origin/feature, feature) day 1 git - basic

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git reset --mixed HEAD~1^C

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git reset --mixed HEAD~1
Unstaged changes after reset:
M       a
M       b

***************************

git log --oneline

************************


GIT SOFT Reset 

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git log --oneline
1767996 (HEAD -> main) modified a and b
4a67095 git reset command and git log --oneline
17e9e4f (origin/main) git rever the commit commnads
ffc9a3a git conflict to use git merge tool
590a696  check the new update in the main
5dd93e1  ++ pushing localy created main  branch to remote
6881b11 (origin/task1, task1)  pushing localy created task1 branch to remote
4af9737 Updated Git delete command
c7374c2 merge local task1 branch to local master branch the changes made
a13f8ab Git updated status
b8e2c47  update on git fetch command
867cd2e Update Git.txt
9569305 (origin/feature, feature) day 1 git - basic

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git reset --soft HEAD~1

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   a
        modified:   b


mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$

******************************
GIT HARD reset 

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git log --oneline
97481a0 (HEAD -> main) modified to CHeck Hard reset  a and b
4a67095 git reset command and git log --oneline
17e9e4f (origin/main) git rever the commit commnads
ffc9a3a git conflict to use git merge tool
590a696  check the new update in the main
5dd93e1  ++ pushing localy created main  branch to remote
6881b11 (origin/task1, task1)  pushing localy created task1 branch to remote
4af9737 Updated Git delete command
c7374c2 merge local task1 branch to local master branch the changes made
a13f8ab Git updated status
b8e2c47  update on git fetch command
867cd2e Update Git.txt
9569305 (origin/feature, feature) day 1 git - basic

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git status 
On branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git reset --hard HEAD~1
HEAD is now at 4a67095 git reset command and git log --oneline

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git status 
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git log --oneline
4a67095 (HEAD -> main) git reset command and git log --oneline
17e9e4f (origin/main) git rever the commit commnads
ffc9a3a git conflict to use git merge tool
590a696  check the new update in the main
5dd93e1  ++ pushing localy created main  branch to remote
6881b11 (origin/task1, task1)  pushing localy created task1 branch to remote
4af9737 Updated Git delete command
c7374c2 merge local task1 branch to local master branch the changes made
a13f8ab Git updated status
b8e2c47  update on git fetch command
867cd2e Update Git.txt
9569305 (origin/feature, feature) day 1 git - basic

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$

*************************************

FOr Resolving COnflicts in Rmote Master Branch 

1. We will have to pull the remote repos origin which is having conflict to local repos
2. We will have to open those file which shows conflict  
3. It will be marked with Headers and we have to review the code and adjust it according the requirment
4. As know the part of the code which we do and other Devops team as done 
5. Finally Remove the conflict markers
***************************

GIT CHERRY PICK 

to cherry pick and apply specfic commit from other local branches you can get the details of that 
specfic commit from git log --oneline and apply as below 

mkvm2@Murali2050 MINGW64 /c/MK-CODE/git-cmds/git-cmds (main)
$ git cherry-pick 9a78a13
[main 9cda39d] Cherry Picking two.sh
 Date: Sat Dec 2 15:10:24 2023 -0600
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 two.sh

******************************************

GIT BLAME

to verufy how many people modified the file and when the comits went on , 
simlar to auditing the changes to file 

if there multiple commit and we are intrest only in last 5 commits 

-L : from the pecfied line onewards , here it mean Line1 


#git blame <file name >

to see line from 1 to 3 (_L 1,3)
#git balame -L 1,3 welcome.txt 

to see recent one week of changes in the file related to commit

#git blame --since=1.week <filename> | grep -v "^\^"

***********************

GIT DIFF  ( Changes we made after last commit )

# git diff --color-words

git diff --color-words Git.txt // shows the changes in working area

$ git diff --color-words --staged Git.txt // shows the changes in staged area

git diff <current comit number> <prior commit number>  <filename> --color-words 

*******************************
For comparing branches 

git diff main feature

**************************************

GIT RESET 


